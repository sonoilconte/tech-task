FROM node:16-alpine

ARG COMMIT
ARG NPM_USER
ARG NPM_PASS
ARG NPM_EMAIL
ARG NPM_REGISTRY

ENV LAST_COMMIT=${COMMIT}

ARG VSF_REDIS_ENABLED
ARG VSF_REDIS_HOST
ARG VSF_REDIS_PORT
ARG VSF_REDIS_CACHE_INVALIDATE_KEY
ARG VSF_REDIS_CACHE_INVALIDATE_URL

ARG API_BASE_URL
ARG API_SSR_BASE_URL
ARG VSF_PROJECT_KEY

ARG VSF_API_URI
ARG VSF_API_HOST
ARG VSF_API_AUTH_HOST
ARG VSF_API_CLIENT_ID
ARG VSF_API_CLIENT_SECRET
ARG VSF_API_SCOPES

ARG VSF_SERVER_API_CLIENT_ID
ARG VSF_SERVER_API_CLIENT_SECRET
ARG VSF_SERVER_API_SCOPES
ARG VSF_SERVER_API_OPERATIONS

ARG NUXT_IMAGE_PROVIDER
ARG NUXT_IMAGE_PROVIDER_BASE_URL

# REDIS_HOST and REDIS_PORT are reserverd environemnt variables for k8s
ENV VSF_REDIS_ENABLED=$VSF_REDIS_ENABLED
ENV VSF_REDIS_HOST=$VSF_REDIS_HOST
ENV VSF_REDIS_PORT=$VSF_REDIS_PORT
ENV VSF_REDIS_CACHE_INVALIDATE_KEY=$VSF_REDIS_CACHE_INVALIDATE_KEY
ENV VSF_REDIS_CACHE_INVALIDATE_URL=$VSF_REDIS_CACHE_INVALIDATE_URL

ENV CLICK_COLLECT_ENABLED=true
ENV CHANNEL_FILTER_ENABLED=false
ENV MULTICURRENCY_ENABLED=true
ENV MULTISTORE_ENABLED=true

ENV VSF_PROJECT_KEY=$VSF_PROJECT_KEY
ENV API_BASE_URL=$API_BASE_URL
ENV API_SSR_BASE_URL=$API_SSR_BASE_URL

ENV VSF_API_URI=$VSF_API_URI
ENV VSF_API_HOST=$VSF_API_HOST
ENV VSF_API_AUTH_HOST=$VSF_API_AUTH_HOST
ENV VSF_API_CLIENT_ID=$VSF_API_CLIENT_ID
ENV VSF_API_CLIENT_SECRET=$VSF_API_CLIENT_SECRET
ENV VSF_API_SCOPES=$VSF_API_SCOPES

ENV VSF_SERVER_API_CLIENT_ID=$VSF_SERVER_API_CLIENT_ID
ENV VSF_SERVER_API_CLIENT_SECRET=$VSF_SERVER_API_CLIENT_SECRET
ENV VSF_SERVER_API_SCOPES=$VSF_SERVER_API_SCOPES
ENV VSF_SERVER_API_OPERATIONS=$VSF_SERVER_API_OPERATIONS

ENV NUXT_IMAGE_PROVIDER=${NUXT_IMAGE_PROVIDER}
ENV NUXT_IMAGE_PROVIDER_BASE_URL=${NUXT_IMAGE_PROVIDER_BASE_URL}

RUN npm install -g npm-cli-login && npm-cli-login

WORKDIR /var/www

COPY . .

RUN yarn install --network-concurrency 1 && yarn build && yarn cache clean --all

COPY .vuestorefrontcloud/docker/vue-storefront.sh /usr/local/bin/

ENTRYPOINT ["vue-storefront.sh"]
